syntax = "proto3";
option go_package = "../proto";

// GeneratorRequest represents a request to generate something based on the project details
message GeneratorRequest {
  // Project represents the project name
  string project = 1;
  // Stack represents the stack name
  string stack = 2;
  // App represents the application name, which is typically the same as the namespace of Kubernetes resources
  string app = 3;
  // Workload represents the v1.Workload defined in the AppConfiguration
  bytes workload = 4;
  // DevModuleConfig is the developer's inputs of this module
  bytes dev_module_config = 5;
  // PlatformModuleConfig is the platform engineer's inputs of this module
  bytes platform_module_config = 6;
}

// GeneratorResponse represents the generate result of the generator.
message GeneratorResponse {
  // Resources is a v1.Resource array, which represents the generated resources by this module.
  repeated bytes resources = 1;
  // Patcher contains fields should be patched into the workload corresponding fields
  repeated bytes patchers = 2;
}

service Module {
  rpc Generate(GeneratorRequest) returns (GeneratorResponse);
}