# Reference from:
# https://goreleaser.com/ci/actions/
name: Release
on:
  push:
    tags:
      - "v*"
permissions:
  contents: write
jobs:
  Test:
    name: Unit tests with coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Running go tests with coverage
        env:
          GO111MODULE: on
        run: make cover
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out
  Lint:
    name: Lint checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Download golangci-lint
        run: |
          wget https://github.com/golangci/golangci-lint/releases/download/v1.50.1/golangci-lint-1.50.1-linux-amd64.tar.gz
          tar -xvf ./golangci-lint-1.50.1-linux-amd64.tar.gz
      - name: Running golangci-lint
        env:
          GO111MODULE: on
          GOPATH: /home/runner/work/
        run: GOLINTER=./golangci-lint-1.50.1-linux-amd64/golangci-lint make lint
  Publish: # Pack and publish image to Docker Hub and Github Release
    runs-on: ubuntu-latest
    needs: [Test, Lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      # <--- Build and Package --->
      - name: Pack kusion release packages for multiple platforms
        env:
          GO111MODULE: on
        run: make build-all
      # <--- Get version informations --->
      - name: Get version
        id: get_version
        run: |
          echo "::set-output name=kusion_version::$(./_build/bundles/kusion-linux/bin/kusion version -s | cut -d ';' -f 1)"
          echo "::set-output name=kclvmgo_version::$(./_build/bundles/kusion-linux/bin/kusion version -y | grep kclvmgoVersion | cut -d ':' -f 2 | awk '$1=$1')"
          echo "::set-output name=kclplugin_version::$(./_build/bundles/kusion-linux/bin/kusion version -y | grep kclPluginVersion | cut -d ':' -f 2 | awk '$1=$1')"
      # <--- Login, build and push image to Docker Hub --->
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # <--- build and push kusion image to Dockerhub --->
      - name: Build and push kusion image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: kusionstack/kusion:latest,kusionstack/kusion:${{ steps.get_version.outputs.kusion_version }}
      # <--- build and push kusionctl image to Dockerhub --->
      - name: Build and push kusionctl image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile_kusionctl
          push: true
          tags: kusionstack/kusionctl:latest,kusionstack/kusionctl:${{ steps.get_version.outputs.kusion_version }}
      # <--- Push kusion big packages for multiple platforms to Github Release --->
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            ./_build/bundles/*.tgz*
            ./_build/bundles/*.zip*
          append_body: true
          body: |
            ## Docker Images
            * `kusionstack/kusion:${{ steps.get_version.outputs.kusion_version }}`

            ## Dependent version
            * [kclvm-go](https://github.com/KusionStack/kclvm-go): `${{ steps.get_version.outputs.kclvmgo_version }}`
            * [kcl-plugin](https://github.com/KusionStack/kcl-plugin): `${{ steps.get_version.outputs.kclplugin_version }}`
      # <--- End --->
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.KUSIONSTACK_BOT_TOKEN }}
